<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_hero</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///constantes
moveSpeed = 10;
c_weapon = 3
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Variables
v_weapon = c_weapon
state = 0 //0 : idle, 1 : attacking
sprite_index = spr_hero_real_idle
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Moving
if (keyboard_check(vk_up) &amp;&amp; y &gt; 16){
    y -= moveSpeed;
}
if (keyboard_check(vk_down) &amp;&amp; y &lt; room_height - 16){
    y += moveSpeed;
}
if (keyboard_check(vk_left) &amp;&amp; x &gt; 16){
    x -= moveSpeed;
}
if (keyboard_check(vk_right) &amp;&amp; x &lt; room_width - 16){
    x += moveSpeed;
}
image_angle = point_direction(x, y, mouse_x, mouse_y);
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Real world
if (global.world == 0)
{
    if (global.real_power_actual != 0)
        global.real_power_actual -= global.reduction;
    else if (global.real_power_actual &lt;= 0)
        room_restart();
//Attack
if (mouse_check_button_pressed(mb_left) &amp;&amp; state == 0) {
        state = 1;
        sprite_index = spr_hero_real_atk;
        d = point_direction(x, y, mouse_x, mouse_y)
        gap = 35
       if (d &gt; 45 &amp;&amp; d &lt;= 135)
        {
            atk = instance_create(x, y-gap, obj_attack_hero_h)
            atk.mvSpeed = moveSpeed;
            atk.dest = gap * -1;
        }
        else if (d &gt; 135 &amp;&amp; d &lt;= 225)
        {
            atk = instance_create(x-gap, y, obj_attack_hero_v)        
            atk.mvSpeed = moveSpeed;
            atk.dest = gap * -1;
        }
        else if (d &gt; 225 &amp;&amp; d &lt;= 315)
        {
            atk = instance_create(x, y+gap, obj_attack_hero_h)        
            atk.mvSpeed = moveSpeed;
            atk.dest = gap;
        }
        else if ((d &gt; 315 &amp;&amp; d &lt;= 360) or (d &gt; 0 &amp;&amp; d &lt;= 45))
        {
            atk = instance_create(x+gap, y, obj_attack_hero_v)
            atk.mvSpeed = moveSpeed;
            atk.dest = gap;
        }
}
if (state == 1 &amp;&amp; image_index == (image_number - 1) )
{
    state = 0;
    sprite_index = spr_hero_real_idle;
}
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Changement de monde
if (mouse_check_button_pressed(mb_right)) {
//Passage dans le shadow world
if (global.world == 0)
{
 global.world = 1;
 sprite_index = spr_hero_shadow_idle;
}
//Passage dans le real world
else if (global.world == 1)
{
 global.world = 0;
 sprite_index = spr_hero_real_idle;
}
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Shadow world
if (global.world == 1)
{
    if (global.shadow_power_actual != 0)
        global.shadow_power_actual -= global.reduction;
    else if (global.shadow_power_actual &lt;= 0)
        room_restart();
//Attaque
if (mouse_check_button(mb_left))
{
    if (v_weapon == c_weapon) {
        state = 1;
        instance_create(x, y, obj_atk_hero_dist);
        v_weapon = 0;
    }
    else {
        v_weapon += 1;
    }
}
if (state == 1 &amp;&amp; image_index == (image_number - 1))
{
    state = 0;
    sprite_index = spr_hero_shadow_idle;
}
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
